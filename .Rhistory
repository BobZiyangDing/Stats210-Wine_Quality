modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Full
modellg1.full <- glm(quality ~ volatile.acidityCent  + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent,data=data, family = binomial)
rawdata <- read.csv("./redwine_quality.csv")
rawdata$quality <- as.numeric(rawdata$quality)
data$quality <- rawdata$quality
data$quality[data$quality >= 7] <- 1
data$quality[data$quality < 7] <- 0
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Full
modellg1.full <- glm(quality ~ volatile.acidityCent  + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent,data=data, family = binomial)
rawdata <- read.csv("./redwine_quality.csv")
rawdata$quality <- as.numeric(rawdata$quality)
data$quality <- rawdata$quality
data$quality[data$quality >= 7] <- 1
data$quality[data$quality < 7] <- 0
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Full
modellg1.full <- glm(quality ~ volatile.acidityCent  + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent,data=data, family = binomial)
View(data)
knitr::opts_chunk$set(echo = TRUE)
library("cowplot")
library("tibble")
library("dplyr")
library("ggplot2")
library("broom")
library("knitr")
library("arm")
library("readr")
library("car")
library("pROC")
# input data source
data <- read.csv("./redwine_quality.csv")
# convert quality into factor variable
data <- data %>% mutate(quality = as.factor(quality))
# overview of the dataset
glimpse(data)
# scatter plot matrix one
pairs(quality ~ fixed.acidity + volatile.acidity + citric.acid + density + residual.sugar + chlorides, data=data)
# correlation coefficients for potential multicollinearity
cor(data$fixed.acidity, data$citric.acid)
cor(data$fixed.acidity, data$density)
cor(data$volatile.acidity, data$citric.acid)
cor(data$density, data$residual.sugar)
# scatter plot matrix two
pairs(quality ~ free.sulfur.dioxide + total.sulfur.dioxide + pH + sulphates + alcohol, data=data)
# correlation coefficients for potential multicollinearity
cor(data$free.sulfur.dioxide, data$total.sulfur.dioxide)
# distribution of each variable
p1  <- ggplot(data = data, aes(x = quality) ) + geom_histogram(stat="count",fill= "lightblue")
p3  <- ggplot(data = data, aes(x = volatile.acidity) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p4  <- ggplot(data = data, aes(x = citric.acid) ) + theme(axis.text=element_text(size=7)) + geom_histogram(fill= "lightblue")
p5  <- ggplot(data = data, aes(x = residual.sugar) ) + geom_histogram(fill= "lightblue")
p6  <- ggplot(data = data, aes(x = chlorides) ) + theme(axis.text=element_text(size=11)) + geom_histogram(fill= "lightblue")
p7  <- ggplot(data = data, aes(x = free.sulfur.dioxide) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p9  <- ggplot(data = data, aes(x = density) ) + theme(axis.text=element_text(size=7.5)) + geom_histogram(fill= "lightblue")
p10 <- ggplot(data = data, aes(x = pH) ) + geom_histogram(fill= "lightblue")
p11 <- ggplot(data = data, aes(x = sulphates) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p12 <- ggplot(data = data, aes(x = alcohol) ) + geom_histogram(fill= "lightblue")
plot_grid(p1,p3,p4,p5,p6,p7,p9,p10,p11,p12,ncol = 4,nrow = 3)
# summary statistics of each variable
summary(data)
# makes quality==5 the reference level
data <- data %>% mutate(quality = relevel(quality, ref=5))
# distribution of citric acid
ggplot(aes(x=citric.acid), data=data) +
geom_histogram(fill="steelblue2", color="black") +
ggtitle("Distribution of Citric Acid") +
theme(plot.title=element_text(color="black", size=14, face="bold.italic", hjust=0.5))
# add mean-centered numerical variables besides citric.acid
data <- data %>%
mutate(volatile.acidityCent = volatile.acidity-mean(volatile.acidity),
residual.sugarCent = residual.sugar-mean(residual.sugar),
chloridesCent = chlorides-mean(chlorides),
free.sulfur.dioxideCent = free.sulfur.dioxide-mean(free.sulfur.dioxide),
sulphatesCent = sulphates-mean(sulphates),
densityCent = density-mean(density), pHCent = pH-mean(pH),
alcoholCent = alcohol-mean(alcohol))
rawdata <- read.csv("./redwine_quality.csv")
rawdata$quality <- as.numeric(rawdata$quality)
data$quality <- rawdata$quality
data$quality[data$quality >= 7] <- 1
data$quality[data$quality < 7] <- 0
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Full
modellg1.full <- glm(quality ~ volatile.acidityCent  + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent,data=data, family = binomial)
# forward Selection
step(modellg1.null,scope=list(upper=modellg1.full),direction="forward")
modellg1.selected <- glm(quality ~ alcoholCent  + volatile.acidityCent + sulphatesCent + chloridesCent + free.sulfur.dioxideCent + citric.acid + pHCent + densityCent,data=data, family = binomial)
summary(modellg1.selected)
kable(tidy(modellg1.selected))
modellg1.final <- glm(quality ~ alcoholCent  + volatile.acidityCent + sulphatesCent + chloridesCent + free.sulfur.dioxideCent + citric.acid,data=data, family = binomial)
summary(modellg1.final)
kable(tidy(modellg1.final))
kable(tidy(vif(modellg1.final)))
data$pred <- predict.glm(modellg1.final)
data$res <- residuals.glm(modellg1.final)
binnedplot(x=data$pred,y=data$res,xlab="Predict")
binnedplot(x=data$alcoholCent,y=data$res,xlab="alcoholCent")
binnedplot(x=data$volatile.acidityCent,y=data$res,xlab="volatile.acidityCent")
binnedplot(x=data$sulphatesCent,y=data$res,xlab="sulphatesCent")
binnedplot(x=data$chloridesCent,y=data$res,xlab="chloridesCent")
binnedplot(x=data$free.sulfur.dioxideCent,y=data$res,xlab="free.sulfur.dioxideCent")
binnedplot(x=data$citric.acid,y=data$res,xlab="citric.acid")
avPlots(modellg1.final)
cutoff <- cooks.distance(modellg1.final)
plot(modellg1.final, which=4, cook.levels=cutoff)
influencePlot(modellg1.final,	 main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
data <- data %>%
mutate(leverage = hatvalues(modellg1.final),
cooks = cooks.distance(modellg1.final),
stand.resid = rstandard(modellg1.final),
obs.num = row_number())
p3 <- ggplot(data=data, aes(x=obs.num,y=leverage)) +
geom_point(alpha=0.5) +
geom_hline(yintercept=0.1,color="red")+
labs(x="Observation Number",y="Leverage",title="Leverage")
p4 <- ggplot(data=data, aes(x=obs.num,y=cooks)) +
geom_point() +
geom_hline(yintercept=1,color="red")+
labs(x="Observation Number",y="Cook's Distance",title="Cook's Distance")
plot_grid(p3,p4,ncol = 2)
rawdata <- read.csv("./redwine_quality.csv")
rawdata$quality <- as.numeric(rawdata$quality)
data$quality <- rawdata$quality
data$quality[data$quality >= 7] <- 1
data$quality[data$quality < 7] <- 0
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Full
modellg1.full <- glm(quality ~ volatile.acidityCent  + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent,data=data, family = binomial)
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
data$quality[data$quality >= 7] <- 1
data$quality[data$quality < 7] <- 0
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Full
modellg1.full <- glm(quality ~ volatile.acidityCent  + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent,data=data, family = binomial)
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
summary(data$quality)
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
data$quality[data$quality >= 7] <- 1
data$quality[data$quality < 7] <- 0
summary(data$quality)
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
data$quality[data$quality >= 3] <- 1
data$quality[data$quality < 3] <- 0
summary(data$quality)
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
View(data)
data$quality[data$quality >= 3] <- 1
View(data)
summary(data$quality)
data$quality[data$quality != 1] <- 0
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
data$quality[data$quality >= 3] <- 1
data$quality[data$quality != 1] <- 0
summary(data$quality)
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
data$quality[data$quality >= 7] <- 1
data$quality[data$quality < 7] <- 0
summary(data$quality)
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
summary(data$quality)
View(data)
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
data$quality[data$quality < 6] <- 0
data$quality[data$quality >= 6] <- 1
summary(data$quality)
knitr::opts_chunk$set(echo = TRUE)
library("cowplot")
library("tibble")
library("dplyr")
library("ggplot2")
library("broom")
library("knitr")
library("arm")
library("readr")
library("car")
library("pROC")
# input data source
data <- read.csv("./redwine_quality.csv")
# convert quality into factor variable
data <- data %>% mutate(quality = as.factor(quality))
# overview of the dataset
glimpse(data)
# scatter plot matrix one
pairs(quality ~ fixed.acidity + volatile.acidity + citric.acid + density + residual.sugar + chlorides, data=data)
# correlation coefficients for potential multicollinearity
cor(data$fixed.acidity, data$citric.acid)
cor(data$fixed.acidity, data$density)
cor(data$volatile.acidity, data$citric.acid)
cor(data$density, data$residual.sugar)
# scatter plot matrix two
pairs(quality ~ free.sulfur.dioxide + total.sulfur.dioxide + pH + sulphates + alcohol, data=data)
# correlation coefficients for potential multicollinearity
cor(data$free.sulfur.dioxide, data$total.sulfur.dioxide)
# distribution of each variable
p1  <- ggplot(data = data, aes(x = quality) ) + geom_histogram(stat="count",fill= "lightblue")
p3  <- ggplot(data = data, aes(x = volatile.acidity) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p4  <- ggplot(data = data, aes(x = citric.acid) ) + theme(axis.text=element_text(size=7)) + geom_histogram(fill= "lightblue")
p5  <- ggplot(data = data, aes(x = residual.sugar) ) + geom_histogram(fill= "lightblue")
p6  <- ggplot(data = data, aes(x = chlorides) ) + theme(axis.text=element_text(size=11)) + geom_histogram(fill= "lightblue")
p7  <- ggplot(data = data, aes(x = free.sulfur.dioxide) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p9  <- ggplot(data = data, aes(x = density) ) + theme(axis.text=element_text(size=7.5)) + geom_histogram(fill= "lightblue")
p10 <- ggplot(data = data, aes(x = pH) ) + geom_histogram(fill= "lightblue")
p11 <- ggplot(data = data, aes(x = sulphates) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p12 <- ggplot(data = data, aes(x = alcohol) ) + geom_histogram(fill= "lightblue")
plot_grid(p1,p3,p4,p5,p6,p7,p9,p10,p11,p12,ncol = 4,nrow = 3)
# summary statistics of each variable
summary(data)
# makes quality==5 the reference level
data <- data %>% mutate(quality = relevel(quality, ref=5))
# distribution of citric acid
ggplot(aes(x=citric.acid), data=data) +
geom_histogram(fill="steelblue2", color="black") +
ggtitle("Distribution of Citric Acid") +
theme(plot.title=element_text(color="black", size=14, face="bold.italic", hjust=0.5))
# add mean-centered numerical variables besides citric.acid
data <- data %>%
mutate(volatile.acidityCent = volatile.acidity-mean(volatile.acidity),
residual.sugarCent = residual.sugar-mean(residual.sugar),
chloridesCent = chlorides-mean(chlorides),
free.sulfur.dioxideCent = free.sulfur.dioxide-mean(free.sulfur.dioxide),
sulphatesCent = sulphates-mean(sulphates),
densityCent = density-mean(density), pHCent = pH-mean(pH),
alcoholCent = alcohol-mean(alcohol))
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
data$quality[data$quality < 6] <- 0
data$quality[data$quality >= 6] <- 1
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Full
modellg1.full <- glm(quality ~ volatile.acidityCent  + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent,data=data, family = binomial)
# forward Selection
step(modellg1.null,scope=list(upper=modellg1.full),direction="forward")
modellg1.selected <- glm(quality ~ alcoholCent  + volatile.acidityCent + sulphatesCent + chloridesCent + free.sulfur.dioxideCent + citric.acid + pHCent + densityCent,data=data, family = binomial)
summary(modellg1.selected)
kable(tidy(modellg1.selected))
modellg1.final <- glm(quality ~ alcoholCent  + volatile.acidityCent + sulphatesCent + chloridesCent + free.sulfur.dioxideCent + citric.acid,data=data, family = binomial)
summary(modellg1.final)
kable(tidy(modellg1.final))
kable(tidy(vif(modellg1.final)))
data$pred <- predict.glm(modellg1.final)
data$res <- residuals.glm(modellg1.final)
binnedplot(x=data$pred,y=data$res,xlab="Predict")
binnedplot(x=data$alcoholCent,y=data$res,xlab="alcoholCent")
binnedplot(x=data$volatile.acidityCent,y=data$res,xlab="volatile.acidityCent")
binnedplot(x=data$sulphatesCent,y=data$res,xlab="sulphatesCent")
binnedplot(x=data$chloridesCent,y=data$res,xlab="chloridesCent")
binnedplot(x=data$free.sulfur.dioxideCent,y=data$res,xlab="free.sulfur.dioxideCent")
binnedplot(x=data$citric.acid,y=data$res,xlab="citric.acid")
avPlots(modellg1.final)
cutoff <- cooks.distance(modellg1.final)
plot(modellg1.final, which=4, cook.levels=cutoff)
influencePlot(modellg1.final,	 main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
data <- data %>%
mutate(leverage = hatvalues(modellg1.final),
cooks = cooks.distance(modellg1.final),
stand.resid = rstandard(modellg1.final),
obs.num = row_number())
p3 <- ggplot(data=data, aes(x=obs.num,y=leverage)) +
geom_point(alpha=0.5) +
geom_hline(yintercept=0.1,color="red")+
labs(x="Observation Number",y="Leverage",title="Leverage")
p4 <- ggplot(data=data, aes(x=obs.num,y=cooks)) +
geom_point() +
geom_hline(yintercept=1,color="red")+
labs(x="Observation Number",y="Cook's Distance",title="Cook's Distance")
plot_grid(p3,p4,ncol = 2)
kable(tidy(vif(modellg1.final)))
knitr::opts_chunk$set(echo = TRUE)
library("cowplot")
library("tibble")
library("dplyr")
library("ggplot2")
library("broom")
library("knitr")
library("arm")
library("readr")
library("car")
library("pROC")
# input data source
data <- read.csv("./redwine_quality.csv")
# convert quality into factor variable
data <- data %>% mutate(quality = as.factor(quality))
# overview of the dataset
glimpse(data)
# scatter plot matrix one
pairs(quality ~ fixed.acidity + volatile.acidity + citric.acid + density + residual.sugar + chlorides, data=data)
# correlation coefficients for potential multicollinearity
cor(data$fixed.acidity, data$citric.acid)
cor(data$fixed.acidity, data$density)
cor(data$volatile.acidity, data$citric.acid)
cor(data$density, data$residual.sugar)
# scatter plot matrix two
pairs(quality ~ free.sulfur.dioxide + total.sulfur.dioxide + pH + sulphates + alcohol, data=data)
# correlation coefficients for potential multicollinearity
cor(data$free.sulfur.dioxide, data$total.sulfur.dioxide)
# distribution of each variable
p1  <- ggplot(data = data, aes(x = quality) ) + geom_histogram(stat="count",fill= "lightblue")
p3  <- ggplot(data = data, aes(x = volatile.acidity) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p4  <- ggplot(data = data, aes(x = citric.acid) ) + theme(axis.text=element_text(size=7)) + geom_histogram(fill= "lightblue")
p5  <- ggplot(data = data, aes(x = residual.sugar) ) + geom_histogram(fill= "lightblue")
p6  <- ggplot(data = data, aes(x = chlorides) ) + theme(axis.text=element_text(size=11)) + geom_histogram(fill= "lightblue")
p7  <- ggplot(data = data, aes(x = free.sulfur.dioxide) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p9  <- ggplot(data = data, aes(x = density) ) + theme(axis.text=element_text(size=7.5)) + geom_histogram(fill= "lightblue")
p10 <- ggplot(data = data, aes(x = pH) ) + geom_histogram(fill= "lightblue")
p11 <- ggplot(data = data, aes(x = sulphates) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p12 <- ggplot(data = data, aes(x = alcohol) ) + geom_histogram(fill= "lightblue")
plot_grid(p1,p3,p4,p5,p6,p7,p9,p10,p11,p12,ncol = 4,nrow = 3)
# summary statistics of each variable
summary(data)
# makes quality==5 the reference level
data <- data %>% mutate(quality = relevel(quality, ref=5))
# distribution of citric acid
ggplot(aes(x=citric.acid), data=data) +
geom_histogram(fill="steelblue2", color="black") +
ggtitle("Distribution of Citric Acid") +
theme(plot.title=element_text(color="black", size=14, face="bold.italic", hjust=0.5))
# add mean-centered numerical variables besides citric.acid
data <- data %>%
mutate(volatile.acidityCent = volatile.acidity-mean(volatile.acidity),
residual.sugarCent = residual.sugar-mean(residual.sugar),
chloridesCent = chlorides-mean(chlorides),
free.sulfur.dioxideCent = free.sulfur.dioxide-mean(free.sulfur.dioxide),
sulphatesCent = sulphates-mean(sulphates),
densityCent = density-mean(density), pHCent = pH-mean(pH),
alcoholCent = alcohol-mean(alcohol))
rawdata <- read.csv("./redwine_quality.csv")
data$quality <- rawdata$quality
data$quality[data$quality < 6] <- 0
data$quality[data$quality >= 6] <- 1
# Model Reduced
modellg1.null <- glm(quality ~ 1, data=data , family=binomial)
# Model Full
modellg1.full <- glm(quality ~ volatile.acidityCent  + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent,data=data, family = binomial)
# forward Selection
step(modellg1.null,scope=list(upper=modellg1.full),direction="forward")
modellg1.selected <- glm(quality ~ alcoholCent  + volatile.acidityCent + sulphatesCent + chloridesCent + free.sulfur.dioxideCent + citric.acid + pHCent + densityCent,data=data, family = binomial)
summary(modellg1.selected)
kable(tidy(modellg1.selected))
modellg1.final <- glm(quality ~ alcoholCent  + volatile.acidityCent + sulphatesCent + chloridesCent + free.sulfur.dioxideCent + citric.acid,data=data, family = binomial)
summary(modellg1.final)
kable(tidy(modellg1.final))
kable(tidy(vif(modellg1.final)))
data$pred <- predict.glm(modellg1.final)
data$res <- residuals.glm(modellg1.final)
binnedplot(x=data$pred,y=data$res,xlab="Predict")
binnedplot(x=data$alcoholCent,y=data$res,xlab="alcoholCent")
binnedplot(x=data$volatile.acidityCent,y=data$res,xlab="volatile.acidityCent")
binnedplot(x=data$sulphatesCent,y=data$res,xlab="sulphatesCent")
binnedplot(x=data$chloridesCent,y=data$res,xlab="chloridesCent")
binnedplot(x=data$free.sulfur.dioxideCent,y=data$res,xlab="free.sulfur.dioxideCent")
binnedplot(x=data$citric.acid,y=data$res,xlab="citric.acid")
avPlots(modellg1.final)
cutoff <- cooks.distance(modellg1.final)
plot(modellg1.final, which=4, cook.levels=cutoff)
influencePlot(modellg1.final,	 main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
data <- data %>%
mutate(leverage = hatvalues(modellg1.final),
cooks = cooks.distance(modellg1.final),
stand.resid = rstandard(modellg1.final),
obs.num = row_number())
p3 <- ggplot(data=data, aes(x=obs.num,y=leverage)) +
geom_point(alpha=0.5) +
geom_hline(yintercept=0.1,color="red")+
labs(x="Observation Number",y="Leverage",title="Leverage")
p4 <- ggplot(data=data, aes(x=obs.num,y=cooks)) +
geom_point() +
geom_hline(yintercept=1,color="red")+
labs(x="Observation Number",y="Cook's Distance",title="Cook's Distance")
plot_grid(p3,p4,ncol = 2)
knitr::opts_chunk$set(echo = TRUE)
library("cowplot")
library("dplyr")
library("ggplot2")
library("broom")
library("knitr")
library("readr")
library("arm")
library("olsrr")
library("dplyr")
library("car")
library("pROC")
#library("tibble")
# input data source
data <- read.csv("./redwine_quality.csv")
# convert quality into factor variable
data <- data %>% mutate(quality = as.factor(quality))
# overview of the dataset
glimpse(data)
# scatter plot matrix one
pairs(quality ~ fixed.acidity + volatile.acidity + citric.acid + density + residual.sugar + chlorides, data=data)
# correlation coefficients for potential multicollinearity
cor(data$fixed.acidity, data$citric.acid)
cor(data$fixed.acidity, data$density)
cor(data$volatile.acidity, data$citric.acid)
cor(data$density, data$residual.sugar)
# scatter plot matrix two
pairs(quality ~ free.sulfur.dioxide + total.sulfur.dioxide + pH + sulphates + alcohol, data=data)
# correlation coefficients for potential multicollinearity
cor(data$free.sulfur.dioxide, data$total.sulfur.dioxide)
# distribution of each variable
p1  <- ggplot(data = data, aes(x = quality) ) + geom_histogram(stat="count",fill= "lightblue")
p3  <- ggplot(data = data, aes(x = volatile.acidity) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p4  <- ggplot(data = data, aes(x = citric.acid) ) + theme(axis.text=element_text(size=7)) + geom_histogram(fill= "lightblue")
p5  <- ggplot(data = data, aes(x = residual.sugar) ) + geom_histogram(fill= "lightblue")
p6  <- ggplot(data = data, aes(x = chlorides) ) + theme(axis.text=element_text(size=11)) + geom_histogram(fill= "lightblue")
p7  <- ggplot(data = data, aes(x = free.sulfur.dioxide) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p9  <- ggplot(data = data, aes(x = density) ) + theme(axis.text=element_text(size=7.5)) + geom_histogram(fill= "lightblue")
p10 <- ggplot(data = data, aes(x = pH) ) + geom_histogram(fill= "lightblue")
p11 <- ggplot(data = data, aes(x = sulphates) ) + theme(axis.text=element_text(size=9)) + geom_histogram(fill= "lightblue")
p12 <- ggplot(data = data, aes(x = alcohol) ) + geom_histogram(fill= "lightblue")
plot_grid(p1,p3,p4,p5,p6,p7,p9,p10,p11,p12,ncol = 4,nrow = 3)
# summary statistics of each variable
summary(data)
# makes quality==5 the reference level
data <- data %>% mutate(quality = relevel(quality, ref=5))
# distribution of citric acid
ggplot(aes(x=citric.acid), data=data) +
geom_histogram(fill="steelblue2", color="black") +
ggtitle("Distribution of Citric Acid") +
theme(plot.title=element_text(color="black", size=14, face="bold.italic", hjust=0.5))
# add mean-centered numerical variables besides citric.acid
data <- data %>%
mutate(volatile.acidityCent = volatile.acidity-mean(volatile.acidity),
residual.sugarCent = residual.sugar-mean(residual.sugar),
chloridesCent = chlorides-mean(chlorides),
free.sulfur.dioxideCent = free.sulfur.dioxide-mean(free.sulfur.dioxide),
sulphatesCent = sulphates-mean(sulphates),
densityCent = density-mean(density), pHCent = pH-mean(pH),
alcoholCent = alcohol-mean(alcohol))
# change quality into a numerical variable
data <- data %>% mutate(quality = as.numeric(quality))
# primary model
full.model <- lm(quality ~ volatile.acidityCent + residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + pHCent + alcoholCent, data=data)
# view the primary model
kable(tidy(full.model), format="markdown")
# check model fit
glance(full.model)
# backward selection process
backward <- ols_step_backward_aic(full.model, details=TRUE)
# view stepwise AIC backward elimination
plot(backward)
# forward selection process
forward <- ols_step_forward_aic(full.model, details=TRUE)
# view stepwise AIC forward selection
plot(forward)
# stepwise selection process
stepwise <- ols_step_both_aic(full.model, details=TRUE)
# view stepwise AIC two-direction selection
plot(stepwise)
# new model from model selection
selected <- lm(quality ~ residual.sugarCent + citric.acid + chloridesCent + free.sulfur.dioxideCent + sulphatesCent + densityCent + alcoholCent, data=data)
# view coefficients of the new model
kable(tidy(selected), format="markdown")
# model after removing chloridesCent
model <- lm(quality ~ residual.sugarCent + citric.acid + free.sulfur.dioxideCent + sulphatesCent + densityCent + alcoholCent, data=data)
# view the model
kable(tidy(model), format="markdown")
# multicollinearity check
kable(tidy(vif(model)))
# interaction effects with residual.sugarCent
model_rs <- lm(quality ~ residual.sugarCent + citric.acid + free.sulfur.dioxideCent + sulphatesCent + densityCent + alcoholCent + residual.sugarCent*citric.acid + residual.sugarCent*free.sulfur.dioxideCent + residual.sugarCent*sulphatesCent + residual.sugarCent*densityCent + residual.sugarCent*alcoholCent, data=data)
# Nested F Test for interaction with residual.sugarCent
ano1 <- anova(model_rs, model)
kable(tidy(ano1))
# Nested F Test for interaction effect between alcohol and density
model_da <- lm(quality ~ residual.sugarCent + citric.acid + free.sulfur.dioxideCent + sulphatesCent + densityCent + alcoholCent + alcoholCent*densityCent, data=data)
ano2 <- anova(model_da, model)
kable(tidy(ano2))
# Nested F Test for all other two-way interactions
model1 <- lm(quality ~ residual.sugarCent + citric.acid + free.sulfur.dioxideCent + sulphatesCent + densityCent + alcoholCent + citric.acid*free.sulfur.dioxideCent + citric.acid*sulphatesCent + citric.acid*densityCent + citric.acid*alcoholCent + free.sulfur.dioxideCent*sulphatesCent + free.sulfur.dioxideCent*densityCent + free.sulfur.dioxideCent*alcoholCent + sulphatesCent*densityCent + sulphatesCent*alcoholCent, data=data)
ano3 <- anova(model1, model)
kable(tidy(ano3))
# backward selection
backward_new <- ols_step_backward_aic(model1, details=TRUE)
# view the stepwise AIC backward elimination
plot(backward_new)
# new model after backward selection
model2 <- lm(quality ~ residual.sugarCent + citric.acid + free.sulfur.dioxideCent + sulphatesCent + densityCent + alcoholCent + citric.acid*free.sulfur.dioxideCent + citric.acid*sulphatesCent + free.sulfur.dioxideCent*alcoholCent + sulphatesCent*alcoholCent, data=data)
kable(tidy(model2), format="markdown")
# make model2 the final multiple regression model
final.model <- lm(quality ~ residual.sugarCent + citric.acid + free.sulfur.dioxideCent + sulphatesCent + densityCent + alcoholCent + citric.acid*free.sulfur.dioxideCent + citric.acid*sulphatesCent + free.sulfur.dioxideCent*alcoholCent + sulphatesCent*alcoholCent, data=data)
data <- data %>% mutate(predicted = predict.lm(final.model))
data <- data %>% mutate(resid=resid(final.model))
ggplot(data, aes(predicted, resid)) + geom_point() +
geom_hline(yintercept=0, color="red") + labs(x="Predicted Values", y="Residuals",
title="Residuals vs. Fitted Values") + theme(plot.title=element_text(hjust=0.5,
size=10))
# distribution of residuals
ggplot(data, aes(resid)) + geom_histogram(color="black",
fill="steelblue2") + labs(x="residuals", y="count", title="Histogram of Residuals") +
theme(plot.title=element_text(hjust=0.5, size=10))
# QQ Plot
qqnorm(bikeshare$resid, main="Normal QQ Plot of Residuals")
